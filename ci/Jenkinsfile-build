withFolderProperties{
    BUILD_ENVIRONMENT = "${env.BUILD_ENVIRONMENT}"
    RH_REGISTRY = "${env.RH_REGISTRY}"
    RH_REGISTRY_CRED_ID = "${env.RH_REGISTRY_CRED_ID}"
    REGISTRY = "${env.REGISTRY}"
    REGISTRY_CRED_ID = "${env.REGISTRY_CRED_ID}"
    DOCKER_FILE_NAME = "${env.DOCKER_FILE_NAME}"
    OCP_APP_NAME = "${env.OCP_APP_NAME}"
    PYPI_BASE_URL = "${env.PYPI_BASE_URL}"
    PYPI_PATH_URL = "${env.PYPI_PATH_URL}"
    PYPI_TRUSTED_HOST = "${env.PYPI_TRUSTED_HOST}"
}

if (BUILD_ENVIRONMENT == '' || BUILD_ENVIRONMENT == null || BUILD_ENVIRONMENT == 'null') {
    currentBuild.result = 'ABORTED'
    error('Not defined BUILD_ENVIRONMENT in Folder properies plugin!')
}
if (OCP_APP_NAME == '' || OCP_APP_NAME == null || OCP_APP_NAME == 'null') {
    currentBuild.result = 'ABORTED'
    error('Not defined OCP_APP_NAME in Folder properies plugin!')
}

pipeline {
    agent {
        label "${BUILD_ENVIRONMENT}"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
    }

    environment {
        GIT_COMMIT_SHORT = sh(
            script: "printf \$(git rev-parse --short ${GIT_COMMIT})",
            returnStdout: true
        )
    }

    stages {
        stage("Docker build image") {
            steps {
                echo "=====docker build====="
                sh """
                docker build -t $OCP_APP_NAME:$GIT_COMMIT_SHORT -f $DOCKER_FILE_NAME \
                    --build-arg BUILD_NUMBER_ARG=${env.BUILD_TAG} .
                """
            }
        }
    }
}
